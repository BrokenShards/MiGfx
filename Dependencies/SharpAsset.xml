<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpAsset</name>
    </assembly>
    <members>
        <member name="T:SharpAsset.AssetManager`1">
            <summary>
              Base class for asset managers.
            </summary>
            <typeparam name="T">
              The managed asset type.
            </typeparam>
        </member>
        <member name="M:SharpAsset.AssetManager`1.#ctor">
            <summary>
              Constructor.
            </summary>
        </member>
        <member name="P:SharpAsset.AssetManager`1.Empty">
            <summary>
              If the manager contains no assets.
            </summary>
        </member>
        <member name="P:SharpAsset.AssetManager`1.Count">
            <summary>
              The amount of assets the manager contains.
            </summary>
        </member>
        <member name="M:SharpAsset.AssetManager`1.IsLoaded(System.String)">
            <summary>
              If an asset with the given path has been loaded successfully.
            </summary>
            <param name="path">
              The path of the asset.
            </param>
            <returns>
              True if an asset with the given path was already loaded and false
              otherwise.
            </returns>
        </member>
        <member name="M:SharpAsset.AssetManager`1.Get(System.String,System.Boolean)">
            <summary>
              Returns the asset loaded from the given path, attempting to load
              a new asset if needed.
            </summary>
            <remarks>
              Please note the given path should be relative to the executable
              as it will be appended to the executable path.
            </remarks>
            <param name="path">
              The path of the asset.
            </param>
            <param name="reload">
              If an already loaded asset ahould be reloaded.
            </param>
            <returns>
              The asset loaded from the given path or null on failure.
            </returns>
        </member>
        <member name="M:SharpAsset.AssetManager`1.Load(System.String,System.Boolean)">
            <summary>
              Loads an asset from the given path.
            </summary>
            <param name="path">
              The path to load the asset from.
            </param>
            <param name="reload">
              If an already existing asset should be reloaded.
            </param>
            <returns>
              True if the asset was/has been loaded successfully and false
              otherwise.
            </returns>
        </member>
        <member name="M:SharpAsset.AssetManager`1.Unload(System.String)">
            <summary>
              Unloads the asset loaded from the given path.
              Please note the given path should be relative to the executable
              as it will be appended to the executable path.
            </summary>
            <param name="path">
              The path of the asset.
            </param>
            <returns>
              True if an asset was loaded from the given path and it was removed
              successfully, otherwise false.
            </returns>
        </member>
        <member name="M:SharpAsset.AssetManager`1.UnloadAll">
            <summary>
              Unloads all assets.
            </summary>
        </member>
        <member name="M:SharpAsset.AssetManager`1.Dispose">
            <summary>
              Disposes of all assets.
            </summary>
        </member>
        <member name="F:SharpAsset.AssetManager`1.m_assets">
            <summary>
              Dictionary containing assets indexed by their file paths.
            </summary>
        </member>
        <member name="T:SharpAsset.Assets">
            <summary>
              Singleton asset manager.
            </summary>
        </member>
        <member name="P:SharpAsset.Assets.Manager">
            <summary>
              The singleton manager instance.
            </summary>
        </member>
        <member name="P:SharpAsset.Assets.Font">
            <summary>
              Font manager.
            </summary>
        </member>
        <member name="P:SharpAsset.Assets.Sound">
            <summary>
              Sound manager.
            </summary>
        </member>
        <member name="P:SharpAsset.Assets.Texture">
            <summary>
              Texture manager.
            </summary>
        </member>
        <member name="M:SharpAsset.Assets.IsLoaded``1(System.String)">
            <summary>
              If an asset with the given path has been loaded successfully.
            </summary>
            <param name="path">
              The path of the asset.
            </param>
            <returns>
              True if an asset with the given path was already loaded and false
              otherwise.
            </returns>
        </member>
        <member name="M:SharpAsset.Assets.Get``1(System.String,System.Boolean)">
            <summary>
              Gets the asset loaded from the given path, attempting to load a
              new one and returning that if needed.
            </summary>
            <remarks>
              Please note the given path should be relative to the executable
              as it will be appended to the executable path.
            </remarks>
            <typeparam name="T">
              The asset type to get.
            </typeparam>
            <param name="path">
              The path of the asset.
            </param>
            <param name="reload">
              If an already loaded asset ahould be reloaded.
            </param>
            <returns>
              The asset loaded from the given path or null if either T is not 
              a valid asset type or on failure.
            </returns>
        </member>
        <member name="M:SharpAsset.Assets.Unload``1">
            <summary>
              Unloads all assets of the given type.
            </summary>
            <typeparam name="T">
              The asset type to unload.
            </typeparam>
        </member>
        <member name="M:SharpAsset.Assets.UnloadAll">
            <summary>
              Unloads all assets of all types.
            </summary>
        </member>
        <member name="M:SharpAsset.Assets.Dispose">
            <summary>
              Disposes of asset managers.
            </summary>
        </member>
        <member name="T:SharpAsset.FontManager">
            <summary>
              Manages fonts.
            </summary>
        </member>
        <member name="M:SharpAsset.FontManager.#ctor">
            <summary>
              Constructor.
            </summary>
        </member>
        <member name="M:SharpAsset.FontManager.Load(System.String,System.Boolean)">
            <summary>
              Loads an asset from the given path.
            </summary>
            <param name="path">
              The path to load the asset from.
            </param>
            <param name="reload">
              If an already existing asset should be reloaded.
            </param>
            <returns>
              True if the asset was/has been loaded successfully and false
              otherwise.
            </returns>
        </member>
        <member name="T:SharpAsset.Paths">
            <summary>
              Contains path related functionality.
            </summary>
        </member>
        <member name="M:SharpAsset.Paths.ToWindows(System.String)">
            <summary>
              Swaps path seperator character '/' with '\\' like in windows paths.
            </summary>
            <param name="path">
              The path.
            </param>
            <returns>
              The path with the seperator character '/' replaced with '\\'.
            </returns>
        </member>
        <member name="M:SharpAsset.Paths.FromWindows(System.String)">
            <summary>
              Swaps path seperator character '\\' with '/' like in non windows paths.
            </summary>
            <param name="path">
              The path.
            </param>
            <returns>
              The path with the seperator character '\\' replaced with '/'.
            </returns>
        </member>
        <member name="T:SharpAsset.FolderPaths">
            <summary>
              Contains folder paths.
            </summary>
        </member>
        <member name="P:SharpAsset.FolderPaths.Executable">
            <summary>
              The folder path containing the binary executable.
            </summary>
        </member>
        <member name="F:SharpAsset.FolderPaths.Assets">
            <summary>
              Base assets folder.
            </summary>
        </member>
        <member name="F:SharpAsset.FolderPaths.Sprites">
            <summary>
              Sprites folder.
            </summary>
        </member>
        <member name="F:SharpAsset.FolderPaths.Tilesets">
            <summary>
              Filesets folder.
            </summary>
        </member>
        <member name="F:SharpAsset.FolderPaths.Sounds">
            <summary>
              Sounds folder.
            </summary>
        </member>
        <member name="F:SharpAsset.FolderPaths.Music">
            <summary>
              Music folder.
            </summary>
        </member>
        <member name="F:SharpAsset.FolderPaths.Fonts">
            <summary>
              Fonts folder.
            </summary>
        </member>
        <member name="F:SharpAsset.FolderPaths.UI">
            <summary>
              GUI assets folder.
            </summary>
        </member>
        <member name="F:SharpAsset.FolderPaths.Settings">
            <summary>
              Settings folder.
            </summary>
        </member>
        <member name="F:SharpAsset.FolderPaths.Data">
            <summary>
              Game data folder.
            </summary>
        </member>
        <member name="F:SharpAsset.FolderPaths.Databases">
            <summary>
              Database folder.
            </summary>
        </member>
        <member name="F:SharpAsset.FolderPaths.Tilemaps">
            <summary>
              Tilemaps folder.
            </summary>
        </member>
        <member name="M:SharpAsset.FolderPaths.CreateFolderStructure">
            <summary>
              Creates the entire folder structure.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SharpAsset.SoundManager">
            <summary>
              Manages sounds.
            </summary>
        </member>
        <member name="M:SharpAsset.SoundManager.#ctor">
            <summary>
              Constructor.
            </summary>
        </member>
        <member name="M:SharpAsset.SoundManager.Load(System.String,System.Boolean)">
            <summary>
              Loads an asset from the given path.
            </summary>
            <param name="path">
              The path to load the asset from.
            </param>
            <param name="reload">
              If an already existing asset should be reloaded.
            </param>
            <returns>
              True if the asset was/has been loaded successfully and false
              otherwise.
            </returns>
        </member>
        <member name="T:SharpAsset.TextureManager">
            <summary>
              Manages textures.
            </summary>
        </member>
        <member name="M:SharpAsset.TextureManager.#ctor">
            <summary>
              Constructor.
            </summary>
        </member>
        <member name="M:SharpAsset.TextureManager.Load(System.String,System.Boolean)">
            <summary>
              Loads an asset from the given path.
            </summary>
            <param name="path">
              The path to load the asset from.
            </param>
            <param name="reload">
              If an already existing asset should be reloaded.
            </param>
            <returns>
              True if the asset was/has been loaded successfully and false
              otherwise.
            </returns>
        </member>
    </members>
</doc>
